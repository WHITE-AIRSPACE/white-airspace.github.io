<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux-everyday</title>
    <link href="/2020/07/16/Linux-everyday/"/>
    <url>/2020/07/16/Linux-everyday/</url>
    
    <content type="html"><![CDATA[<h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><pre><code class="hljs shell">pwd使用pwd命令找出您所在的当前工作目录（文件夹）的路径。该命令将返回绝对（完整）路径</code></pre><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><pre><code class="hljs shell">ls 默认情况下，此命令将显示当前工作目录的内容;如果要查看其他文件夹内容，可在 `ls` 后面输入目录的路径，例如： `ls /home/user`还可以搭配以下参数使用：* ls -R  子目录的所有文件也会被列出* ls -a  将显示隐藏的文件* ls -al 将列出文件和目录以及详细信息，例如权限，大小，所有者等。</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IOS WEBVIEW 进程被挂起倒计时失效的问题</title>
    <link href="/2020/07/08/ios-coudown/"/>
    <url>/2020/07/08/ios-coudown/</url>
    
    <content type="html"><![CDATA[<h2 id="IOS-WEBVIEW-有JS倒计时函数时候息屏或者切换后台倒计时会暂停的问题"><a href="#IOS-WEBVIEW-有JS倒计时函数时候息屏或者切换后台倒计时会暂停的问题" class="headerlink" title="IOS WEBVIEW 有JS倒计时函数时候息屏或者切换后台倒计时会暂停的问题"></a>IOS WEBVIEW 有JS倒计时函数时候息屏或者切换后台倒计时会暂停的问题</h2><pre><code class="hljs js">&gt; 计算订单倒计时Countdown() &#123;        <span class="hljs-keyword">let</span> now = +<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(), <span class="hljs-comment">//当前时间</span>            createTime = +<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(createTime),<span class="hljs-comment">//创建时间</span>            exprie = <span class="hljs-number">30</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>, <span class="hljs-comment">// 过期时长</span>            dif = (createTime + exprie) - now;        <span class="hljs-keyword">this</span>.timer = setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;            <span class="hljs-keyword">if</span> (dif &gt; <span class="hljs-number">1000</span>) &#123;                dif -= <span class="hljs-number">1000</span>                <span class="hljs-keyword">let</span> minute = <span class="hljs-built_in">Math</span>.floor((dif / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span>) % <span class="hljs-number">60</span>);                <span class="hljs-keyword">let</span> second = <span class="hljs-built_in">Math</span>.floor(dif / <span class="hljs-number">1000</span> % <span class="hljs-number">60</span>);                <span class="hljs-keyword">this</span>.setState(&#123;                    seconds: second &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">"0"</span> + second : second,                    minute: minute &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">"0"</span> + minute : minute,                &#125;)            &#125; <span class="hljs-keyword">else</span> &#123;                clearInterval(<span class="hljs-keyword">this</span>.timer);                <span class="hljs-built_in">window</span>.location.reload()            &#125;        &#125;, <span class="hljs-number">1000</span>)    &#125;</code></pre><blockquote><p>页面加载完调用</p></blockquote><pre><code class="hljs js">componentDidMount()&#123;    <span class="hljs-keyword">this</span>.Countdown() <span class="hljs-comment">// 倒计时</span>    <span class="hljs-keyword">this</span>.visibilityChange() <span class="hljs-comment">//判断页面是否被隐藏</span>&#125;</code></pre><blockquote><p>定义监听页面是否被隐藏函数</p></blockquote><pre><code class="hljs js">visibilityChange() &#123;        <span class="hljs-comment">//判断页面是否被隐藏 兼容 IOS/AD</span>        <span class="hljs-keyword">let</span> hidden, visibilityChange;        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">document</span>.hidden !== <span class="hljs-string">"undefined"</span>) &#123;            hidden = <span class="hljs-string">"hidden"</span>;            visibilityChange = <span class="hljs-string">"visibilitychange"</span>;        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">document</span>.mozHidden !== <span class="hljs-string">"undefined"</span>) &#123;            hidden = <span class="hljs-string">"mozHidden"</span>;            visibilityChange = <span class="hljs-string">"mozvisibilitychange"</span>;        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">document</span>.msHidden !== <span class="hljs-string">"undefined"</span>) &#123;            hidden = <span class="hljs-string">"msHidden"</span>;            visibilityChange = <span class="hljs-string">"msvisibilitychange"</span>;        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">document</span>.webkitHidden !== <span class="hljs-string">"undefined"</span>) &#123;            hidden = <span class="hljs-string">"webkitHidden"</span>;            visibilityChange = <span class="hljs-string">"webkitvisibilitychange"</span>;        &#125;        <span class="hljs-built_in">document</span>.addEventListener(visibilityChange, () =&gt; &#123;            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">document</span>[hidden]) &#123;                <span class="hljs-comment">// 再次执行一次矫正时间    </span>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'回来了'</span>)            &#125;        &#125;)    &#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>REACT 滚动加载实现</title>
    <link href="/2020/07/08/react-load/"/>
    <url>/2020/07/08/react-load/</url>
    
    <content type="html"><![CDATA[<h2 id="REACT-滚动加载实现"><a href="#REACT-滚动加载实现" class="headerlink" title="REACT 滚动加载实现"></a>REACT 滚动加载实现</h2><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><pre><code class="hljs js">checkVisible = <span class="hljs-function">(<span class="hljs-params">node</span>) =&gt;</span> &#123;    <span class="hljs-keyword">if</span> (node) &#123;        <span class="hljs-keyword">const</span> &#123;top, bottom, left, right&#125; = node.getBoundingClientRect();        <span class="hljs-keyword">return</span> bottom &gt; <span class="hljs-number">0</span>            &amp;&amp; top &lt; <span class="hljs-built_in">window</span>.innerHeight            &amp;&amp; left &lt; <span class="hljs-built_in">window</span>.innerWidth            &amp;&amp; right &gt; <span class="hljs-number">0</span>;    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;&#125;</code></pre><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noopener">getBoundingClientRect 接口相关知识 </a></p></blockquote><p>滚动监听判断监听的元素是否出现在屏幕中</p><pre><code class="hljs js">handleScroll() &#123;    <span class="hljs-keyword">let</span> more = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'more'</span>) <span class="hljs-comment">// 监测的元素</span>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.checkVisible(more)) &#123;        <span class="hljs-keyword">this</span>.loadMore()    &#125;&#125;</code></pre><pre><code class="hljs js">loadMore()&#123;    <span class="hljs-comment">// more data</span>&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
